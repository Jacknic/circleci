# 参考官网 https://circleci.com/docs/2.0/language-android/#sample-configuration
version: 2

# 引用变量
references:
  cache_key_jars: &cache_key_jars
    # key: jars-{{ checksum "build.gradle.kts" }}-{{ checksum  "app/build.gradle.kts" }}
    key: jars-{{ checksum "build.gradle.kts" }}
  cache_key_image: &cache_key_image
    key: image-{{ checksum "build.gradle.kts" }}
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          <<: *cache_key_jars
      - restore_cache:
          <<: *cache_key_image
      - run:
          name: 修改权限配置
          command: sudo chmod +x ./gradlew
      - run:
          name: 下载依赖
          command: ./gradlew androidDependencies
      - save_cache:
          <<: *cache_key_jars
          paths:
            - ~/.gradle
      - run:
          name: 运行测试
          command: ./gradlew lint test
      # 参考How to run Android UI tests properly on CircleCI 2.0? - Stack Overflow
      # https://stackoverflow.com/questions/45424110/how-to-run-android-ui-tests-properly-on-circleci-2-0
      # 注意事项：system-images不要选x86或x64的，这需要kvm；选择arm时，启动时要关闭GPU。
      - run:
          name: 显示system-images镜像列表
          command: sdkmanager --list --verbose | grep system-images
      - run:
          name: 下载镜像文件
          command: echo "yes" | sdkmanager "system-images;android-24;default;armeabi-v7a"
      - save_cache:
          <<: *cache_key_image
          paths:
            - ${ANDROID_HOME}/system-images
      - run:
          name: 创建模拟器
          command: echo "no" | avdmanager create avd -n test -k "system-images;android-24;default;armeabi-v7a"
      - run:
          name: 启动模拟器
          command: export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib && emulator64-arm -avd test -noaudio -no-boot-anim -no-window -accel auto -verbose -gpu off -skin WXGA720
          background: true
      - run:
          name: 等待模拟器启动
          command: |
            circle-android wait-for-boot
            adb shell input keyevent 82
      - run:
          name: 运行Espresso UI测试
          command: ./gradlew :app:connectedDebugAndroidTest
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results
      - run:
          name: 运行编译(debug)
          command: ./gradlew assembleDebug
      - run:
          name: 运行编译(release)
          command: ./gradlew assembleRelease
      - store_artifacts:
          path: app/build/outputs/apk
          destination: apk